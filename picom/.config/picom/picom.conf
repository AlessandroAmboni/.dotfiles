

# ╔══════╗
# ║ BLUR ║
# ╚══════╝

blur:
{
  method = "dual_kawase";
  strength = 3;
    
};


# ╔════════════╗
# ║ ANIMATIONS ║
# ╚════════════╝

animation = {
    enabled = true;
    duration = 200;  # Animation duration in milliseconds

    # Fade effects
    fade-in = true;
    fade-out = true;

    # Slide animations
    slide-in = true;
    slide-out = true;
    slide-in-direction = "top";  # Options: "top", "bottom", "left", "right"
    slide-out-direction = "bottom";  # Options: "top", "bottom", "left", "right"

    # Resize animations
    resize = true;
};

animations = (
  {
    triggers = ["close", "hide"];
    opacity = {
      curve = "linear";
      duration = 0.1;
      start = "window-raw-opacity-before";
      end = 0;
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
  },
  {
    triggers = ["open", "show"];
    opacity = {
      curve = "cubic-bezier(0,1,1,1)";
      duration = 0.3;
      start = 0;
      end = "window-raw-opacity";
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
      curve = "cubic-bezier(0,1.3,1,1)";
      duration = 0.3;
      start = 0.6;
      end = 1;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  },
  {
    triggers = ["geometry"]
    scale-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-width-before / window-width";
      end = 1;
    }
    scale-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-height-before / window-height";
      end = 1;
    }
    offset-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-x-before - window-x";
      end = 0;
    }
    offset-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-y-before - window-y";
      end = 0;
    }

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }
)




# ╔════════════════════╗
# ║  GENERAL SETTINGS  ║
# ╚════════════════════╝

# backend to use: `xrender`, `glx`, or `egl`.

backend = "glx";
vsync = true;


# ╔══════════════╗
# ║ WINDOW RULES ║
# ╚══════════════╝

rules: ({

    match = "name = 'Notification'   || "
          "class_g = 'Conky'       || "
          "class_g ?= 'Notify-osd' || "
          "class_g = 'Cairo-clock' || "
          "_GTK_FRAME_EXTENTS@";
    shadow = false;
})
